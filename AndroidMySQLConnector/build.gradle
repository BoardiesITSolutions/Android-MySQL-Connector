

buildscript {
    repositories {
        apply plugin: 'maven-publish'
        if (rootProject.ext.publishToMavenLocal) {
            mavenLocal()
        }
        else
        {
            mavenCentral()
        }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
if (rootProject.ext.publishToMavenLocal)
{
    println("using maven local")

}
else
{
    println("Not using maven local")
    //apply plugin: 'com.github.dcendents.android-maven'
}

archivesBaseName="AndroidMySQLConnector"
version '0.52'
group 'com.BoardiesITSolutions'


android {
    compileSdk 33
    defaultConfig {
        //applicationId "com.BoardiesITSolutions.AndroidMySQLConnector"
        minSdkVersion 19
        targetSdkVersion 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    println("Is publishToMavenLocal set? " + rootProject.ext.publishToMavenLocal)
    android.libraryVariants

    project.afterEvaluate {
        project.publishing {
            publications {
                mavenJava(MavenPublication) {
                    groupId 'com.BoardiesITSolutions'
                    artifactId 'AndroidMySQLConnector'
                    version '0.51'
                    artifact("$buildDir/outputs/aar/AndroidMySQLConnector-release.aar")
                }
            }
            repositories {
                if (rootProject.ext.publishToMavenLocal) {
                    mavenLocal()
                }
                else {
                    mavenCentral()
                }
            }
        }
    }

    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "${archivesBaseName}-${version}.aar"
                //def fileName = "${archivesBaseName}-debug.aar"
                //output.outputFile = new File(outputFile.parent, fileName)
                outputFileName = fileName
            }
        }
    }


    repositories {
        if (rootProject.ext.publishToMavenLocal)
        {
            mavenLocal()
        }
        else
        {
            mavenCentral()
        }
        jcenter()
        maven {
            url "https://maven.google.com"
        }
    }
    namespace 'com.BoardiesITSolutions.AndroidMySQLConnector'
}

def getArtifactFullPath() {
    return ".//build/outputs/aar/${archivesBaseName}-${project.version}.aar"
    //return ".//build/outputs/aar/${archivesBaseName}-debug.aar"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation('com.google.guava:guava:32.1.3-jre')
}
